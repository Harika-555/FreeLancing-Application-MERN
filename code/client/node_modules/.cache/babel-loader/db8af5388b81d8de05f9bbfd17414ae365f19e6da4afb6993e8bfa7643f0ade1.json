{"ast":null,"code":"// import  { createContext, useState } from 'react';\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import socketIoClient from 'socket.io-client';\n\n// export const GeneralContext = createContext();\n\n// const GeneralContextProvider = ({children}) => {\n\n//   const WS = 'http://localhost:6001';\n\n//   const socket = socketIoClient(WS);\n\n//   const navigate = useNavigate();\n\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [usertype, setUsertype] = useState('');\n\n//   const login = async () =>{\n//     try{\n//       const loginInputs = {email, password}\n//         await axios.post('http://localhost:6001/login', loginInputs)\n//         .then( async (res)=>{\n\n//           localStorage.setItem('userId', res.data._id);\n//             localStorage.setItem('usertype', res.data.usertype);\n//             localStorage.setItem('username', res.data.username);\n//             localStorage.setItem('email', res.data.email);\n//             if(res.data.usertype === 'freelancer'){\n//                 navigate('/freelancer');\n//             } else if(res.data.usertype === 'client'){\n//               navigate('/client');\n//             } else if(res.data.usertype === 'admin'){\n//                 navigate('/admin');\n//             }\n//           }).catch((err) =>{\n//             alert(\"login failed!!\");\n//             console.log(err);\n//           });\n\n//         }catch(err){\n//           console.log(err);\n//         }\n//       }\n\n//   const inputs = {username, email, usertype, password};\n\n//   const register = async () =>{\n//     try{\n//         await axios.post('http://localhost:6001/register', inputs)\n//         .then( async (res)=>{\n//             localStorage.setItem('userId', res.data._id);\n//             localStorage.setItem('usertype', res.data.usertype);\n//             localStorage.setItem('username', res.data.username);\n//             localStorage.setItem('email', res.data.email);\n\n//             if(res.data.usertype === 'freelancer'){\n//               navigate('/freelancer');\n//           } else if(res.data.usertype === 'client'){\n//             navigate('/client');\n//           } else if(res.data.usertype === 'admin'){\n//               navigate('/admin');\n//           }\n\n//         }).catch((err) =>{\n//             alert(\"registration failed!!\");\n//             console.log(err);\n//         });\n//     }catch(err){\n//         console.log(err);\n//     }\n//   }\n\n//   const logout = async () =>{\n\n//     localStorage.clear();\n//     for (let key in localStorage) {\n//       if (localStorage.hasOwnProperty(key)) {\n//         localStorage.removeItem(key);\n//       }\n//     }\n\n//     navigate('/');\n//   }\n\n//   return (\n//     <GeneralContext.Provider value={{socket, login, register, logout, username, setUsername, email, setEmail, password, setPassword, usertype, setUsertype}} >{children}</GeneralContext.Provider>\n//   )\n// }\n\n// export default GeneralContextProvider","map":{"version":3,"names":[],"sources":["D:/code/client/src/context/GeneralContext.jsx"],"sourcesContent":["// import  { createContext, useState } from 'react';\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import socketIoClient from 'socket.io-client';\r\n\r\n// export const GeneralContext = createContext();\r\n\r\n// const GeneralContextProvider = ({children}) => {\r\n\r\n//   const WS = 'http://localhost:6001';\r\n\r\n//   const socket = socketIoClient(WS);\r\n\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const [username, setUsername] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [usertype, setUsertype] = useState('');\r\n \r\n  \r\n  \r\n  \r\n//   const login = async () =>{\r\n//     try{\r\n//       const loginInputs = {email, password}\r\n//         await axios.post('http://localhost:6001/login', loginInputs)\r\n//         .then( async (res)=>{\r\n\r\n//           localStorage.setItem('userId', res.data._id);\r\n//             localStorage.setItem('usertype', res.data.usertype);\r\n//             localStorage.setItem('username', res.data.username);\r\n//             localStorage.setItem('email', res.data.email);\r\n//             if(res.data.usertype === 'freelancer'){\r\n//                 navigate('/freelancer');\r\n//             } else if(res.data.usertype === 'client'){\r\n//               navigate('/client');\r\n//             } else if(res.data.usertype === 'admin'){\r\n//                 navigate('/admin');\r\n//             }\r\n//           }).catch((err) =>{\r\n//             alert(\"login failed!!\");\r\n//             console.log(err);\r\n//           });\r\n          \r\n//         }catch(err){\r\n//           console.log(err);\r\n//         }\r\n//       }\r\n      \r\n//   const inputs = {username, email, usertype, password};\r\n\r\n//   const register = async () =>{\r\n//     try{\r\n//         await axios.post('http://localhost:6001/register', inputs)\r\n//         .then( async (res)=>{\r\n//             localStorage.setItem('userId', res.data._id);\r\n//             localStorage.setItem('usertype', res.data.usertype);\r\n//             localStorage.setItem('username', res.data.username);\r\n//             localStorage.setItem('email', res.data.email);\r\n\r\n//             if(res.data.usertype === 'freelancer'){\r\n//               navigate('/freelancer');\r\n//           } else if(res.data.usertype === 'client'){\r\n//             navigate('/client');\r\n//           } else if(res.data.usertype === 'admin'){\r\n//               navigate('/admin');\r\n//           }\r\n \r\n//         }).catch((err) =>{\r\n//             alert(\"registration failed!!\");\r\n//             console.log(err);\r\n//         });\r\n//     }catch(err){\r\n//         console.log(err);\r\n//     }\r\n//   }\r\n\r\n\r\n//   const logout = async () =>{\r\n    \r\n//     localStorage.clear();\r\n//     for (let key in localStorage) {\r\n//       if (localStorage.hasOwnProperty(key)) {\r\n//         localStorage.removeItem(key);\r\n//       }\r\n//     }\r\n    \r\n//     navigate('/');\r\n//   }\r\n\r\n\r\n//   return (\r\n//     <GeneralContext.Provider value={{socket, login, register, logout, username, setUsername, email, setEmail, password, setPassword, usertype, setUsertype}} >{children}</GeneralContext.Provider>\r\n//   )\r\n// }\r\n\r\n// export default GeneralContextProvider"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}